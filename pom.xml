<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>protege4</groupId>
	<artifactId>org.semanticweb.owl.owlapi</artifactId>
	<packaging>bundle</packaging>
	<name>OWL API Library bundled for Protege</name>
	<!-- We have to disable the feature until the bug in the plugin is solved
	  <version>${core.major.version}.${core.minor.version}.${core.micro.version}.b${core.build.number}-SNAPSHOT</version> 
	 -->
    <!-- Usually I don't like dead commented code but here this is
         something that is revived on each release -->
    <!-- <version>3.1.0.Svn_1639_3_1_0_release_2010_12_15_1039</version> -->
	<version>3.1.0.213_SNAPSHOT</version>
    
	<parent>
		<groupId>protege4</groupId>
		<artifactId>masterpom</artifactId>
		<version>1.0.3</version>
	</parent>

	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
	</properties>

	<distributionManagement>
		<!-- If this pom.xml is executed on a developer's machine (mvn deploy) 
			the developer's local repositories will be used, if executed on the BMIR the BMIR repositories. -->
		<repository>
			<id>releases</id>
			<name>Releases</name>
			<url>${nexus.path}/bmir-release</url>
		</repository>

		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots</name>
			<url>${nexus.path}/snapshots</url>
			<!-- <uniqueVersion>false</uniqueVersion> -->
		</snapshotRepository>
		
		
	</distributionManagement>

	<scm>
		<connection>scm:svn:http://smi-protege.stanford.edu/repos/protege/protege4/plugins/org.protege.editor.core.application/tags/org.protege.editor.core.application-0.0.3</connection>
		<!--<developerConnection>scm:svn:https://127.0.0.1/svn/my-project</developerConnection>-->
		<tag>HEAD</tag>
		<url>http://smi-protege.stanford.edu/repos/protege/protege4/plugins/org.coode.dlquery/tags/dlquery-0.0.3</url>
	</scm>

	<dependencies>
      <dependency>
        <groupId>owlapi</groupId>
        <artifactId>owlapi</artifactId>
        <version>3.1.0.svn1639-patched</version>
      </dependency>
	</dependencies>

	<description>OWL API Libraries in an OSGi Bundle for Protege</description>
	<organization>
		<name>Stanford University, BMIR</name>
	</organization>

	<build>
		<plugins>

            <plugin>
              <groupId>org.apache.felix</groupId>
              <artifactId>maven-bundle-plugin</artifactId>
              <version>1.4.0</version>
              <extensions>true</extensions>
              <configuration>
                <instructions>
                  <Bundle-SymbolicName>org.semanticweb.owl.owlapi</Bundle-SymbolicName>
                  <Bundle-Vendor>The Protege Development Team</Bundle-Vendor>
                  <Export-Package>*</Export-Package>
                </instructions>
                <executions>
                  <execution>
                    <id>bundle-manifest</id>
                    <phase>install</phase>
                    <goals>    
                      <goal>manifest</goal>
                    </goals>   
                  </execution>
                </executions>
              </configuration>
            </plugin>

			<!-- Create jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
		
		
			<!-- Execution of unit tests Generates output for reporting plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- We set skip to true. So the unit tests can be explicitly defined 
						in xml file reference below -->
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<suiteXmlFiles>
								<suiteXmlFile>src/test/resources/unit-tests.xml</suiteXmlFile>
							</suiteXmlFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>


</project>
